

# 一、项目的初始化

## 1.npm 初始化

```
npm init -y
```

## 2.git初始化

```
git init
```

## 3.创建ReadMe  文件

# 二.搭建项目

## 1.安装Koa框架

```
npm install koa
```

## 2.编写最基础的app

1.创建文件夹`src/main.js`

2.编写简单appd代码

```
const Koa = require('koa');

const app = new Koa();

// 中间件
app.use((ctx,next)=>{
    ctx.body ='hello api'
})

app.listen(3000,()=>{
    console.log('server listening on http://localhost:3000');
})
```

# 3.测试并启动服务器

1.使用`node src/main.js`来启动服务器

# 4.优化项目

## 1.自动重启服务器

1.安装nodemon

```
npm i nodemon
```

2.进行配置nodemon，在package.json中

```
 "scripts": {
    "dev":"nodemon ./src/main.js"
  }
```

3.使用`npm run dev`来启动服务器

![image-20230727231523701](C:\Users\Administrator\AppData\Roaming\Typora\typora-user-images\image-20230727231523701.png)

## 2.读取配置文件（如端口号、地址）

1.安装`dotenv`,然后读取根目录中的`.env`文件，将配置写`process.env`中

```
npm i dotenv
```

2.创建`.env`文件

```
APP_POST = 8000
```

3.创建`src/config/config_default.js`文件

```
const dotenv = require('dotenv');

dotenv.config();
// console.log(process.env.APP_POST);

module.exports = process.env
```

4.改写成动态的接口(如main.js)

```
const {APP_POST} = require('./config/config.default');
app.listen(APP_POST,()=>{
    console.log(`server listening on http://localhost:${APP_POST}`);
})
```

